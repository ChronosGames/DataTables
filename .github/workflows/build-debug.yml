name: Build-Debug

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: PhonixGame/Actions/.github/actions/setup-dotnet@main
        with:
          dotnet-version: |
            7.0.x
      - run: dotnet build -c Debug
      - run: dotnet test -c Debug --no-build

  build-unity:
    if: "((github.event_name == 'push' && github.repository_owner == 'PhonixGame') || startsWith(github.event.pull_request.head.label, 'PhonixGame:'))"
    strategy:
      matrix:
        unity: ["2021.3.19f1"]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3

      # Execute scripts: RuntimeUnitTestToolkit
      # /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod UnitTestBuilder.BuildUnitTest /headless /ScriptBackend mono /BuildTarget StandaloneLinux64
      - name: Build UnitTest(Linux64, mono)
        uses: PhonixGame/Actions/.github/actions/unity-builder@main
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          projectPath: src/DataTables.Unity
          unityVersion: ${{ matrix.unity }}
          targetPlatform: StandaloneLinux64
          buildMethod: UnitTestBuilder.BuildUnitTest
          customParameters: /headless /ScriptBackend mono
      # Unity 2021.2 and above changed Headless mode. It seems require Dedicated Server currently and investigating alternative api to enable batch mode.
      # - name: Execute UnitTest
      #   run: ./src/MemoryPack.Unity/bin/UnitTest/StandaloneLinux64_Mono2x/test -batchmode

      # Execute scripts: Export Package
      # /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod PackageExporter.Export
      - name: Build Unity (.unitypacakge)
        uses: PhonixGame/Actions/.github/actions/unity-builder@main
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          projectPath: src/DataTables.Unity
          unityVersion: ${{ matrix.unity }}
          targetPlatform: StandaloneLinux64
          buildMethod: PackageExporter.Export

      - uses: PhonixGame/Actions/.github/actions/check-metas@main # check meta files
        with:
          directory: src/DataTables.Unity

      # Store artifacts.
      - uses: actions/upload-artifact@v3
        with:
          name: DataTables.${{ matrix.unity }}.unitypackage.zip
          path: ./src/DataTables.Unity/*.unitypackage
