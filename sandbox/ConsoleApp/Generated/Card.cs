




// <auto-generated />
#pragma warning disable CS0105

using System;
using System.IO;
using DataTables;

namespace ConsoleApp
{
    public sealed class Card : DataRowBase
    {

        /// <summary>卡牌编号</summary>
        public int Id { get; private set; }

        /// <summary>卡牌类型</summary>
        public CardType CardType { get; private set; }

        /// <summary>种族</summary>
        public int Nation { get; private set; }

        /// <summary>品质</summary>
        public int Quality { get; private set; }

        /// <summary>放置消耗指挥点</summary>
        public int PlaceKredit { get; private set; }

        /// <summary>移动消耗指挥点</summary>
        public int MoveKredit { get; private set; }

        /// <summary>初始攻击</summary>
        public int Attack { get; private set; }

        /// <summary>初始防御</summary>
        public int Defense { get; private set; }

        /// <summary>技能编号列表</summary>
        public int[] Skills { get; private set; }

        /// <summary>皮肤编号列表</summary>
        public int[] SkinIds { get; private set; }


        public override bool Deserialize(byte[] raw, int offset, int length)
        {
            using (MemoryStream stream = new MemoryStream(raw, offset, length, false))
            {
                using (BinaryReader reader = new BinaryReader(stream))
                {

                    Id = reader.Read7BitEncodedInt32();

                    if (Enum.TryParse(reader.ReadString(), out CardType __CardType))
                    {
                        CardType = __CardType;
                    }

                    Nation = reader.Read7BitEncodedInt32();

                    Quality = reader.Read7BitEncodedInt32();

                    PlaceKredit = reader.Read7BitEncodedInt32();

                    MoveKredit = reader.Read7BitEncodedInt32();

                    Attack = reader.Read7BitEncodedInt32();

                    Defense = reader.Read7BitEncodedInt32();

                    Skills = new Int32[reader.Read7BitEncodedInt32()];
                    for (int x1 = 0; x1 < Skills.Length; x1++)
                    {
                        Skills[x1] = reader.Read7BitEncodedInt32();
                    }

                    SkinIds = new Int32[reader.Read7BitEncodedInt32()];
                    for (int x1 = 0; x1 < SkinIds.Length; x1++)
                    {
                        SkinIds[x1] = reader.Read7BitEncodedInt32();
                    }

                }
            }

            return true;
        }
    }
}