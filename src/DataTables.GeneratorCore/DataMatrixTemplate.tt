<#@ template debug="false" hostspecific="false" linePragmas="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
// <auto-generated />
#pragma warning disable CS0105
using System;
using System.IO;
using System.Collections.Generic;
using DataTables;

#nullable enable

<# if (!string.IsNullOrEmpty(GenerationContext.Namespace)) { #>
namespace <#= GenerationContext.Namespace #>
{
<# } #>

public sealed partial class DT<#= GenerationContext.ClassName #> : DataMatrixBase<<#= BuildTypeString(kKey1) #>, <#= BuildTypeString(kKey2) #>, <#= BuildTypeString(kValue) #>>
{
    <#= string.IsNullOrEmpty(GenerationContext.MatrixDefaultValue) ? string.Empty : "protected override " + BuildTypeString(kValue) + " DefaultValue => " + BuildTypeValueString(kValue, GenerationContext.MatrixDefaultValue) + ";" + Environment.NewLine #>
    public DT<#= GenerationContext.ClassName #>(string name, int capacity) : base(name, capacity)
    { }

    public override bool ParseDataRow(int index, BinaryReader reader)
    {
        <#= BuildTypeString(kKey1) #> <#= kKey1 #>;
        <#= BuildDeserializeMethodString(kKey1) #>

        <#= BuildTypeString(kKey2) #> <#= kKey2 #>;
        <#= BuildDeserializeMethodString(kKey2) #>

        <#= BuildTypeString(kValue) #> <#= kValue #>;
        <#= BuildDeserializeMethodString(kValue) #>

        SetDataRow(index, <#= kKey1 #>, <#= kKey2 #>, <#= kValue #>);
        return true;
    }
}

<# if (!string.IsNullOrEmpty(GenerationContext.Namespace)) { #>
}
<# } #>
