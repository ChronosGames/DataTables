<#@ template debug="false" hostspecific="false" linePragmas="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
// <auto-generated />
using System;
using System.Collections.Generic;
using System.IO;
using DataTables;

<# if (!string.IsNullOrEmpty(Namespace)) { #>
namespace <#= Namespace #>
{
<# } #>
    public static class DataTableManagerExtension
    {
        public static Dictionary<string, string[]> Tables = new Dictionary<string, string[]>
        {
<# foreach (var pair in DataTables) { #>
            { "<#= DataRowPrefix #><#= pair.Key #>", <#=(pair.Value.Length == 0 ? "Array.Empty<string>()" : "new string[] {\"" + string.Join("\", \"", pair.Value) + "\"}")#> },
<# } #>
        };

        /// <summary>
        /// 预加载所有配置表。
        /// </summary>
        /// <param name="manager"></param>
        public static void Preload(this DataTableManager manager)
        {
<# 
foreach (var pair in DataTables)
{
    if (pair.Value.Length == 0)
    {
        #>            manager.CreateDataTable<DT<#=pair.Key#>>();<#=Environment.NewLine#><#
    }
    else
    {
        foreach (var name in pair.Value)
        {
            #>            manager.CreateDataTable<DT<#=pair.Key#>>("<#=name#>");<#=Environment.NewLine#><#
        }
    }   
}
#>
        }
    }
<# if (!string.IsNullOrEmpty(Namespace)) { #>
}
<# } #>