// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace DataTables.GeneratorCore
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class DataTableTemplate : DataTableTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("// <auto-generated />\r\n#pragma warning disable CS0105\r\n#pragma warning disable CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring as nullable.\r\n#pragma warning disable CS8602 // Dereference of a possibly null reference.\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Runtime.CompilerServices;\r\nusing DataTables;\r\n");
            
            #line 16 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Using));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n#nullable enable\r\n\r\n");
            
            #line 20 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
 if (!string.IsNullOrEmpty(Namespace)) { 
            
            #line default
            #line hidden
            this.Write("namespace ");
            
            #line 21 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 23 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("public sealed partial class ");
            
            #line 24 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.DataTableClassName));
            
            #line default
            #line hidden
            this.Write(" : DataTable<");
            
            #line 24 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.DataRowClassName));
            
            #line default
            #line hidden
            this.Write(">\r\n{\r\n");
            
            #line 26 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"

    if (GenerationContext.Indexs.Count > 0)
    {
        for (var i = 0; i < GenerationContext.Indexs.Count; i++)
        {
            var item = GenerationContext.Indexs[i];
            
            
            #line default
            #line hidden
            this.Write("    private ");
            
            #line 32 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.BuildIndexDictDefine(item)));
            
            #line default
            #line hidden
            this.Write(" m_Dict");
            
            #line 32 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i + 1));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 32 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.BuildIndexDictDefine(item)));
            
            #line default
            #line hidden
            this.Write("();");
            
            #line 32 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Environment.NewLine));
            
            #line default
            #line hidden
            
            #line 32 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"

        }

        
            
            #line default
            #line hidden
            
            #line 35 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Environment.NewLine));
            
            #line default
            #line hidden
            
            #line 35 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"

    }

    if (GenerationContext.Groups.Count > 0)
    {
        for (var j = 0; j < GenerationContext.Groups.Count; j++)
        {
            var fieldNames = GenerationContext.Groups[j];

            
            
            #line default
            #line hidden
            this.Write("    private ");
            
            #line 44 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.BuildGroupDictDefine(fieldNames)));
            
            #line default
            #line hidden
            this.Write(" m_Dict");
            
            #line 44 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.Indexs.Count + 1 + j));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 44 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.BuildGroupDictDefine(fieldNames)));
            
            #line default
            #line hidden
            this.Write("();");
            
            #line 44 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Environment.NewLine));
            
            #line default
            #line hidden
            
            #line 44 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"

        }

        
            
            #line default
            #line hidden
            
            #line 47 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Environment.NewLine));
            
            #line default
            #line hidden
            
            #line 47 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("    public ");
            
            #line 50 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.DataTableClassName));
            
            #line default
            #line hidden
            this.Write("(string name, int capacity) : base(name, capacity) { }\r\n\r\n    protected override void InternalAddDataRow(int index, ");
            
            #line 52 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.DataRowClassName));
            
            #line default
            #line hidden
            this.Write(" dataRow)\r\n    {\r\n        base.InternalAddDataRow(index, dataRow);\r\n\r\n");
            
            #line 56 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
  for (var i = 0; i < GenerationContext.Indexs.Count; i++)
    {
        var item = GenerationContext.Indexs[i];

            
            #line default
            #line hidden
            this.Write("        m_Dict");
            
            #line 60 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1));
            
            #line default
            #line hidden
            this.Write(".Add(");
            
            #line 60 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Length > 1 ? ('(' + (string.Join(", ", item.Select(x => $"dataRow.{x}"))) + ')') : $"dataRow.{item[0]}"));
            
            #line default
            #line hidden
            this.Write(", dataRow);\r\n");
            
            #line 61 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
  }
    for (var i = 0; i < GenerationContext.Groups.Count; i++)
    {
        var item = GenerationContext.Groups[i];

            
            #line default
            #line hidden
            this.Write("        {\r\n            if (m_Dict");
            
            #line 67 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.Indexs.Count + i + 1));
            
            #line default
            #line hidden
            this.Write(".TryGetValue(");
            
            #line 67 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Length > 1 ? '(' + (string.Join(", ", item.Select(x => $"dataRow.{x}"))) + ')' : $"dataRow.{item[0]}"));
            
            #line default
            #line hidden
            this.Write(", out var arr))\r\n            {\r\n                arr.Add(dataRow);\r\n            }\r\n            else\r\n            {\r\n                arr = new List<");
            
            #line 73 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.DataRowClassName));
            
            #line default
            #line hidden
            this.Write(">();\r\n                arr.Add(dataRow);\r\n                m_Dict");
            
            #line 75 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.Indexs.Count + i + 1));
            
            #line default
            #line hidden
            this.Write(".Add(");
            
            #line 75 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Length > 1 ? '(' + (string.Join(", ", item.Select(x => $"dataRow.{x}"))) + ')' : $"dataRow.{item[0]}"));
            
            #line default
            #line hidden
            this.Write(", arr);\r\n            }\r\n        }\r\n");
            
            #line 78 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
  } 
            
            #line default
            #line hidden
            this.Write("    }\r\n\r\n    #region Static API\r\n");
            
            #line 82 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
  for (var i = 0; i < GenerationContext.Indexs.Count; i++)
    {
        var item = GenerationContext.Indexs[i];

            
            #line default
            #line hidden
            this.Write("\r\n    /// <summary>\r\n    /// 根据索引获取数据行\r\n    /// </summary>\r\n    [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n    public static ");
            
            #line 91 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.DataRowClassName));
            
            #line default
            #line hidden
            this.Write("? GetDataRowBy");
            
            #line 91 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join("And", item)));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 91 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.BuildMethodParameters(item)));
            
            #line default
            #line hidden
            this.Write(")\r\n    {\r\n        var table = DataTableManager.GetDataTableInternal<");
            
            #line 93 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.DataTableClassName));
            
            #line default
            #line hidden
            this.Write(">();\r\n        if (table?.m_Dict");
            
            #line 94 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i + 1));
            
            #line default
            #line hidden
            this.Write(".TryGetValue(");
            
            #line 94 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Length > 1 ? '(' + GenerationContext.BuildCamelCaseParameters(item) + ')' : GenerationContext.ToCamelCase(item[0])));
            
            #line default
            #line hidden
            this.Write(", out var result) == true)\r\n        {\r\n            return result;\r\n        }\r\n        else\r\n        {\r\n#if DT_CHECK_NOT_FOUND && UNITY_EDITOR\r\n            UnityEngine.Debug.LogWarningFormat(\"");
            
            #line 101 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.DataTableClassName));
            
            #line default
            #line hidden
            this.Write(" not found index: ");
            
            #line 101 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.BuildIndexsLogFormat(item)));
            
            #line default
            #line hidden
            this.Write("\", ");
            
            #line 101 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.BuildCamelCaseParameters(item)));
            
            #line default
            #line hidden
            this.Write(");\r\n#endif\r\n            return null;\r\n        }\r\n    }\r\n");
            
            #line 106 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
  }
    for (var j = 0; j < GenerationContext.Groups.Count; j++)
    {
        var item = GenerationContext.Groups[j];

            
            #line default
            #line hidden
            this.Write("\r\n    /// <summary>\r\n    /// 根据分组获取数据行列表\r\n    /// </summary>\r\n    [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n    public static List<");
            
            #line 116 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.DataRowClassName));
            
            #line default
            #line hidden
            this.Write(">? GetDataRowsGroupBy");
            
            #line 116 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join("And", item)));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 116 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.BuildMethodParameters(item)));
            
            #line default
            #line hidden
            this.Write(")\r\n    {\r\n        var table = DataTableManager.GetDataTableInternal<");
            
            #line 118 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.DataTableClassName));
            
            #line default
            #line hidden
            this.Write(">();\r\n        return table?.m_Dict");
            
            #line 119 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.Indexs.Count + j + 1));
            
            #line default
            #line hidden
            this.Write(".TryGetValue(");
            
            #line 119 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Length > 1 ? '(' + GenerationContext.BuildCamelCaseParameters(item) + ')' : GenerationContext.ToCamelCase(item[0])));
            
            #line default
            #line hidden
            this.Write(", out var result) == true ? result : null;\r\n    }\r\n");
            
            #line 121 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
  } 
            
            #line default
            #line hidden
            this.Write("\r\n    #endregion\r\n}\r\n\r\n/// <summary>");
            
            #line 126 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(BuildSummary(GenerationContext.Title)));
            
            #line default
            #line hidden
            this.Write("</summary>\r\npublic sealed partial class ");
            
            #line 127 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GenerationContext.DataRowClassName));
            
            #line default
            #line hidden
            this.Write(" : DataRowBase\r\n{\r\n");
            
            #line 129 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
 foreach(var item in GenerationContext.Fields)
{
    if (item.IsIgnore) continue;

            
            #line default
            #line hidden
            this.Write("\r\n    /// <summary>");
            
            #line 134 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(BuildSummary(item.Title)));
            
            #line default
            #line hidden
            this.Write("</summary>");
            
            #line 134 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.IsNullOrEmpty(item.Note) ? string.Empty : Environment.NewLine + "    /// <remarks>" + BuildSummary(item.Note) + "</remarks>"));
            
            #line default
            #line hidden
            this.Write("\r\n    public ");
            
            #line 135 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPropertyTypeString(item)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 135 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name));
            
            #line default
            #line hidden
            this.Write(" { get; private set; }\r\n");
            
            #line 136 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n    public override bool Deserialize(BinaryReader reader)\r\n    {\r\n");
            
            #line 140 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
 foreach(var item in GenerationContext.Fields)
{
    if (item.IsIgnore) continue;

            
            #line default
            #line hidden
            this.Write("        ");
            
            #line 144 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetDeserializeMethodString(item)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 145 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("        return true;\r\n    }\r\n}\r\n\r\n");
            
            #line 150 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
 if (!string.IsNullOrEmpty(Namespace)) { 
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 152 "D:\Projects\ChronosGames\DataTables\src\DataTables.GeneratorCore\DataTableTemplate.tt"
 } 
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class DataTableTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
